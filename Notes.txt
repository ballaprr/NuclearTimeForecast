

- Region 1: 20, 12

One Reactor:
	- FitzPatrick
	- Ginna
	- Hope Creek
	- Seabrook
Two Reactors:
	- Beaver Valley
	- Calvert Cliffs
	- Limerick
	- Millstone
	- Nine Mile Point
	- Peach Bottom
	- Salem
	- Susquehanna


- Region 2: 35, 17

One Reactor:
	- Harris
	- Robinson
	- Summer
Two Reactors:
	- Brunswick
	- Catawba
	- Farley
	- Hatch
	- McGuire
	- North Anna
	- Saint Lucie
	- Sequoyah 
	- Surry
	- Turkey Point
	- Watts Bar
Three Reactors:
	- Browns Ferry
	- Oconee
Four Reactors:
	- Vogtle
	
	
- Region 3: 21, 13

One Reactor:
	- Clinton
	- Davis-Besse
	- Fermi
	- Monticello
	- Perry
Two Reactors:
	- Braidwood
	- Byron
	- D.C. Cook
	- Dresden
	- LaSalle
	- Point Beach
	- Prairie Island
	- Quad Cities
	
	
- Region 4: 18, 12

One Reactor:
	- Callaway
	- Columbia Generating Station
	- Cooper
	- Grand Gulf
	- River Bend Station
	- Waterford
	- Wolf Creek
Two Reactors:
	- Arkansas Nuclear
	- Comanche Peak
	- Diable Canyon
	- South Texas
Three Reactors:
	- Palo Verde
	
	
	
	
Reason or Comments:

Steam Generator limitations: 99
Increasing Power: 1, 29, 30, 13, 50, 90, 30, 71
Reduced Power for Maintenance: 96, 85
Reduced Power for Rod Pattern Adjustment: 87, 89
Refueling Outage: 0
Forced Outage; Main Generator Maintenance: 0
Holding Power for Fuel Efficieny: 65, 70
100% Electrical Capability: 99
Maintenance Outage: 0
Reduced power for Maintenance: 0, 84
Holdeing Power: 33
High Voltage Alert: 100
Down Power Contingency to 1000 MWe: 100
High System Voltage Action: 100
Increasing Power Following outage: 12



# Data Extraction: https://www.nrc.gov/reading-rm/doc-collections/event-status/reactor-status/2025/index.html

year = '2025'
date = '20250627'

'https://www.nrc.gov/reading-rm/doc-collections/event-status/reactor-status/' + {year} + '/' + {date} + 'ps.html'



Hi Michael, 
   I heard back a couple weeks ago, they've decided not to move forward this round. Disappointing, but I'm still looking to work on something combine my software skills with the nuclear industry. 
   I'm currently working on a Django tool that pulls NRC daily "Power Reactor Status" into a Prophet model to project the power output for each unit, flag anomalies, and generate a stub outage for any unit with an alert. I've just went through the website and scraped the NRC data and am looking to populate TimeScaleDB (an extension of Postgres). Is this an application that you think the nuclear industry would find useful? Are there any other projects that you being in the nuclear industry would find useful?
   
   
   
  
Models:

Reactor (name, region, latitude, longitude)

ReactorStatus (reactor foreign key, report_date, power, reason, changed, scrams, status)


StubOutage (reactor foreign key, date_detected, description, auto_detected, confirmed, created_at)

ReactorForecast (reactor, ds, yhat, yhat_lower, yhat_upper, created_at)
   
  

Pull latest NRC data -> Update Reactor Status -> Runs Prophet Model per reactor -> Compare prediction vs actual power

-> Updates status field (normal/anomalous/stub_outage) -> if sub outage, create StubOutage object


- Compare predicted (what we predict for today) vs actual (after we fetch from nrc)

After Actuals are saved for each reactor, fetch today's forecast from ReactorForecast, Fetch today's actual from ReactorStatus





main page:

/reactors/<date_id:date>
Reactor:
- Latest date from ReactorStatus
- Reactor



/reactors/<reactor_id:int>/

- Actual power (ReactorStatus)
- StubOutage (if not then Normal)
- image_url (ReactorForecast)
   
   
To do: 
	- Darken the map
	- Take away the power bar on the right
	- Remove Online & Offline
	- Plot reactors on map
	- Hover on to see name
	- Click on button and see details returned from specific api
	- Resize and reorient front end
	- Rename urls when saving to s3, to get dates correct
	- Look into stuboutage again
	- Work on api so we can colorcode Normal vs StubOutage
	- Reload data in database
   
   
  
  
  
  
 
